---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: nginx
  name: nginx
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    service: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      service: nginx
  template:
    metadata:
      labels:
        service: nginx
    spec:
      containers:
        - image: public.ecr.aws/docker/library/nginx:stable-alpine
          name: nginx
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx-config-volume
              readOnly: true
              subPath: default.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
            items:
              - key: default.conf
                path: default.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  name: nginx-config
data:
  default.conf: |
    server {
       listen 80 default_server;
       server_name _;

       location / {
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_hide_header X-Powered-By;

         proxy_pass http://backend:9000;
       }
    }
